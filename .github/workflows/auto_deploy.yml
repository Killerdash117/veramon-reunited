name: Veramon Bot Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        
    - name: Create mock .env file for testing
      run: |
        echo "BOT_TOKEN=mock_token_for_ci" > .env
        echo "COMMAND_PREFIX=!" >> .env
        echo "DATABASE_PATH=data/veramon_reunited.db" >> .env
        echo "DEBUG_MODE=True" >> .env
        echo "MAINTENANCE_MODE=False" >> .env
        echo "LOG_LEVEL=INFO" >> .env
        
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        
    - name: Test with pytest
      continue-on-error: true
      run: |
        pip install pytest
        if [ -d tests ]; then pytest -v; fi
  
  generate_deployment_guide:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Generate detailed deployment guide
      run: |
        echo "===== VERAMON REUNITED DEPLOYMENT GUIDE ====="
        echo ""
        echo "Follow these steps to manually deploy your Veramon bot:"
        echo ""
        echo "1. Connect to your server via SSH"
        echo ""
        echo "2. Create the deployment directory:"
        echo "   mkdir -p /opt/veramon-bot"
        echo "   cd /opt/veramon-bot"
        echo ""
        echo "3. Create the .env file with your bot token and settings:"
        echo "   cat > .env << 'EOF'"
        echo "   BOT_TOKEN=your_discord_bot_token_here"
        echo "   COMMAND_PREFIX=!"
        echo "   DATABASE_PATH=data/veramon_reunited.db"
        echo "   DEBUG_MODE=True"
        echo "   MAINTENANCE_MODE=False"
        echo "   LOG_LEVEL=DEBUG"
        echo "   EOF"
        echo ""
        echo "4. Create necessary directories for all systems:"
        echo "   mkdir -p data logs battle-system battle-trading factions events quests tournaments"
        echo "   chmod -R 777 data logs battle-system battle-trading factions events quests tournaments"
        echo ""
        echo "5. Get the docker-compose file:"
        echo "   wget -O docker-compose.yml https://raw.githubusercontent.com/${{ github.repository }}/main/docker/docker-compose.yml"
        echo ""
        echo "6. Build or pull the Docker image:"
        echo "   Option A - Build locally:"
        echo "   git clone https://github.com/${{ github.repository }}.git /tmp/veramon-clone"
        echo "   cd /tmp/veramon-clone"
        echo "   docker build -t veramon-bot:latest -f docker/Dockerfile ."
        echo ""
        echo "   Option B - Pull from Docker Hub (if you've pushed it there):"
        echo "   docker pull your-dockerhub-username/veramon-bot:latest"
        echo ""
        echo "7. Start the bot:"
        echo "   cd /opt/veramon-bot"
        echo "   docker-compose down || true"
        echo "   docker-compose up -d"
        echo ""
        echo "8. Verify the bot is running:"
        echo "   docker ps -a"
        echo "   docker logs veramon-bot"
        echo ""
        echo "===== FEATURES INCLUDED ====="
        echo "- Battle System (PvP, PvE, turn-based combat)"
        echo "- Trading System (secure player-to-player trading)"
        echo "- Faction System (territories, ranks, faction wars)"
        echo "- Quest System (achievements, progression)"
        echo "- Special Events (seasonal content, tournaments)"
        echo ""
        echo "If the bot doesn't come online, check the logs with 'docker logs veramon-bot'"
        echo "The most common issues are invalid bot tokens or Docker image problems."
        echo ""
