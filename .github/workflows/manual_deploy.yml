name: Manual Deployment Instructions

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build_instructions:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Run tests
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        if [ -d tests ]; then pytest -v; fi
        
    - name: Generate deployment instructions
      run: |
        echo "## Veramon Reunited Manual Deployment Instructions" > DEPLOY.md
        echo "" >> DEPLOY.md
        echo "Since GitHub Actions restrictions prevent automatic deployment, follow these steps manually:" >> DEPLOY.md
        echo "" >> DEPLOY.md
        echo "### Step 1: Build the Docker image locally" >> DEPLOY.md
        echo '```bash' >> DEPLOY.md
        echo "# Clone the repository if you haven't already" >> DEPLOY.md
        echo "git clone https://github.com/${{ github.repository }}.git" >> DEPLOY.md
        echo "cd $(echo '${{ github.repository }}' | cut -d'/' -f2)" >> DEPLOY.md
        echo "" >> DEPLOY.md
        echo "# Build the Docker image" >> DEPLOY.md
        echo "docker build -t veramon-bot:latest -f docker/Dockerfile ." >> DEPLOY.md
        echo '```' >> DEPLOY.md
        echo "" >> DEPLOY.md
        echo "### Step 2: Deploy to your server" >> DEPLOY.md
        echo '```bash' >> DEPLOY.md
        echo "# Save the image to a tarball" >> DEPLOY.md
        echo "docker save veramon-bot:latest > veramon-bot.tar" >> DEPLOY.md
        echo "" >> DEPLOY.md
        echo "# Transfer the Docker image and needed files to your server" >> DEPLOY.md
        echo "scp veramon-bot.tar root@193.33.195.164:/tmp/" >> DEPLOY.md
        echo "scp docker/docker-compose.yml root@193.33.195.164:/tmp/" >> DEPLOY.md
        echo "" >> DEPLOY.md
        echo "# SSH into your server" >> DEPLOY.md
        echo "ssh root@193.33.195.164" >> DEPLOY.md
        echo "" >> DEPLOY.md
        echo "# On the server" >> DEPLOY.md
        echo "mkdir -p /opt/veramon-bot" >> DEPLOY.md
        echo "cd /opt/veramon-bot" >> DEPLOY.md
        echo "" >> DEPLOY.md
        echo "# Load the Docker image" >> DEPLOY.md
        echo "docker load < /tmp/veramon-bot.tar" >> DEPLOY.md
        echo "mv /tmp/docker-compose.yml ." >> DEPLOY.md
        echo "" >> DEPLOY.md
        echo "# Create necessary directories" >> DEPLOY.md
        echo "mkdir -p data logs battle-system battle-trading factions events quests tournaments" >> DEPLOY.md
        echo "chmod -R 777 data logs battle-system battle-trading factions events quests tournaments" >> DEPLOY.md
        echo "" >> DEPLOY.md
        echo "# Create .env file" >> DEPLOY.md
        echo "cat > .env << EOF" >> DEPLOY.md
        echo "BOT_TOKEN=YOUR_DISCORD_BOT_TOKEN_HERE" >> DEPLOY.md
        echo "COMMAND_PREFIX=!" >> DEPLOY.md
        echo "DATABASE_PATH=data/veramon_reunited.db" >> DEPLOY.md
        echo "DEBUG_MODE=False" >> DEPLOY.md
        echo "MAINTENANCE_MODE=False" >> DEPLOY.md
        echo "LOG_LEVEL=INFO" >> DEPLOY.md
        echo "EOF" >> DEPLOY.md
        echo "" >> DEPLOY.md
        echo "# Start the bot" >> DEPLOY.md
        echo "docker-compose up -d" >> DEPLOY.md
        echo "" >> DEPLOY.md
        echo "# Verify it's running" >> DEPLOY.md
        echo "docker ps | grep veramon-bot" >> DEPLOY.md
        echo '```' >> DEPLOY.md
        echo "" >> DEPLOY.md
        echo "### Step 3: Join the bot to your Discord server" >> DEPLOY.md
        echo "Use this invite link (replace YOUR_CLIENT_ID with your bot's client ID):" >> DEPLOY.md
        echo "" >> DEPLOY.md
        echo "https://discord.com/api/oauth2/authorize?client_id=1364427978175418428&permissions=534723950656&scope=bot%20applications.commands" >> DEPLOY.md
        
    - name: Upload deployment instructions
      uses: actions/upload-artifact@v3
      with:
        name: deployment-instructions
        path: DEPLOY.md
